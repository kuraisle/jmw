{
  "hash": "9c62966afcaffc34d007893361c83e48",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Improving drug resistance models\"\nformat:\n  html:\n    code-fold: true\n    code-summary: \"Show the code\"\ndescription: The models for drug sensitivity could be improved. Here I try a few ways\ndate-format: iso\ndate: 2024-04-03\ndraft: true\ncategories:\n  - data analysis\n  - gdsc\nexecute:\n  freeze: true\n---\n\n::: {#83a2729c .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport hdbscan\nimport seaborn as sns\nimport lightgbm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.manifold import TSNE\nfrom matplotlib import cm\nfrom re import sub\nfrom IPython.display import Markdown\n```\n:::\n\n\nIn a [previous article](gdsc_drug_models.qmd), I trained some models to predict the sensitivity of tumour cells to drugs. This naive attempt yielded some promising results, but there's a lot you can do to improve machine learning models. Let's try a few.\n\nHere's the data again:\n\n::: {#2ba3293b .cell execution_count=2}\n``` {.python .cell-code}\n# Reading the excel was taking ages. The csv import, with extraneous columns removed, is much faster\nic50_data = pd.read_csv(\"data/GDSC1.csv\")\nic50_data.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>COSMIC_ID</th>\n      <th>DRUG_NAME</th>\n      <th>LN_IC50</th>\n      <th>AUC</th>\n      <th>RMSE</th>\n      <th>Z_SCORE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>684057</td>\n      <td>Erlotinib</td>\n      <td>3.966813</td>\n      <td>0.985678</td>\n      <td>0.026081</td>\n      <td>1.299144</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>684059</td>\n      <td>Erlotinib</td>\n      <td>2.692090</td>\n      <td>0.972690</td>\n      <td>0.110059</td>\n      <td>0.156076</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>684062</td>\n      <td>Erlotinib</td>\n      <td>2.477990</td>\n      <td>0.944459</td>\n      <td>0.087019</td>\n      <td>-0.035912</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>684072</td>\n      <td>Erlotinib</td>\n      <td>2.033564</td>\n      <td>0.950758</td>\n      <td>0.016290</td>\n      <td>-0.434437</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>687448</td>\n      <td>Erlotinib</td>\n      <td>2.966007</td>\n      <td>0.954778</td>\n      <td>0.180255</td>\n      <td>0.401702</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nThe first thing to check is whether you have the data you need.\n\n::: {#a8a80e9f .cell execution_count=3}\n``` {.python .cell-code}\ntest_counts = ic50_data[['DRUG_NAME', 'COSMIC_ID']] .groupby('DRUG_NAME').agg('count') \n\nfig, ax = plt.subplots(figsize = (8,6))\nax.hist(test_counts, bins = 50)\nax.set_xlabel('Number of cells tested')\nax.set_ylabel('Number of drugs')\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](improving_gdsc_models_files/figure-html/cell-4-output-1.png){width=757 height=564}\n:::\n:::\n\n\n::: {#68ef6f5e .cell execution_count=4}\n``` {.python .cell-code}\nMarkdown(f\"Here we can see that of the {len(test_counts)} drugs in the dataset, {int((test_counts >800).sum())} have over 800 tests. This means we can drop a few drugs and be sure we have plenty of data points to predict from.\")\n```\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=4}\nHere we can see that of the 378 drugs in the dataset, 322 have over 800 tests. This means we can drop a few drugs and be sure we have plenty of data points to predict from.\n:::\n:::\n\n\nWe'll bring in the expression data again. We've not looked at this data at all, really. Let's have a reminder of the shape of it.\n\n::: {#66c0b39b .cell execution_count=5}\n``` {.python .cell-code}\nrma_expr = pd.read_csv(\"data/Cell_line_RMA_proc_basalExp.txt\", sep = \"\\t\")\nrma_expr.dropna(inplace=True)\nrma_expr= rma_expr.set_index('GENE_SYMBOLS')\nrma_expr.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>GENE_title</th>\n      <th>DATA.906826</th>\n      <th>DATA.687983</th>\n      <th>DATA.910927</th>\n      <th>DATA.1240138</th>\n      <th>DATA.1240139</th>\n      <th>DATA.906792</th>\n      <th>DATA.910688</th>\n      <th>DATA.1240135</th>\n      <th>DATA.1290812</th>\n      <th>...</th>\n      <th>DATA.753584</th>\n      <th>DATA.907044</th>\n      <th>DATA.998184</th>\n      <th>DATA.908145</th>\n      <th>DATA.1659787</th>\n      <th>DATA.1298157</th>\n      <th>DATA.1480372</th>\n      <th>DATA.1298533</th>\n      <th>DATA.930299</th>\n      <th>DATA.905954.1</th>\n    </tr>\n    <tr>\n      <th>GENE_SYMBOLS</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>TSPAN6</th>\n      <td>tetraspanin 6 [Source:HGNC Symbol;Acc:11858]</td>\n      <td>7.632023</td>\n      <td>7.548671</td>\n      <td>8.712338</td>\n      <td>7.797142</td>\n      <td>7.729268</td>\n      <td>7.074533</td>\n      <td>3.285198</td>\n      <td>6.961606</td>\n      <td>5.943046</td>\n      <td>...</td>\n      <td>7.105637</td>\n      <td>3.236503</td>\n      <td>3.038892</td>\n      <td>8.373223</td>\n      <td>6.932178</td>\n      <td>8.441628</td>\n      <td>8.422922</td>\n      <td>8.089255</td>\n      <td>3.112333</td>\n      <td>7.153127</td>\n    </tr>\n    <tr>\n      <th>TNMD</th>\n      <td>tenomodulin [Source:HGNC Symbol;Acc:17757]</td>\n      <td>2.964585</td>\n      <td>2.777716</td>\n      <td>2.643508</td>\n      <td>2.817923</td>\n      <td>2.957739</td>\n      <td>2.889677</td>\n      <td>2.828203</td>\n      <td>2.874751</td>\n      <td>2.686874</td>\n      <td>...</td>\n      <td>2.798847</td>\n      <td>2.745137</td>\n      <td>2.976406</td>\n      <td>2.852552</td>\n      <td>2.622630</td>\n      <td>2.639276</td>\n      <td>2.879890</td>\n      <td>2.521169</td>\n      <td>2.870468</td>\n      <td>2.834285</td>\n    </tr>\n    <tr>\n      <th>DPM1</th>\n      <td>dolichyl-phosphate mannosyltransferase polypep...</td>\n      <td>10.379553</td>\n      <td>11.807341</td>\n      <td>9.880733</td>\n      <td>9.883471</td>\n      <td>10.418840</td>\n      <td>9.773987</td>\n      <td>10.264385</td>\n      <td>10.205931</td>\n      <td>10.299757</td>\n      <td>...</td>\n      <td>10.486486</td>\n      <td>10.442951</td>\n      <td>10.311962</td>\n      <td>10.454830</td>\n      <td>10.418475</td>\n      <td>11.463742</td>\n      <td>10.557777</td>\n      <td>10.792750</td>\n      <td>9.873902</td>\n      <td>10.788218</td>\n    </tr>\n    <tr>\n      <th>SCYL3</th>\n      <td>SCY1-like 3 (S. cerevisiae) [Source:HGNC Symbo...</td>\n      <td>3.614794</td>\n      <td>4.066887</td>\n      <td>3.956230</td>\n      <td>4.063701</td>\n      <td>4.341500</td>\n      <td>4.270903</td>\n      <td>5.968168</td>\n      <td>3.715033</td>\n      <td>3.848112</td>\n      <td>...</td>\n      <td>3.696835</td>\n      <td>4.624013</td>\n      <td>4.348524</td>\n      <td>3.858121</td>\n      <td>3.947561</td>\n      <td>4.425849</td>\n      <td>3.550390</td>\n      <td>4.443337</td>\n      <td>4.266828</td>\n      <td>4.100493</td>\n    </tr>\n    <tr>\n      <th>C1orf112</th>\n      <td>chromosome 1 open reading frame 112 [Source:HG...</td>\n      <td>3.380681</td>\n      <td>3.732485</td>\n      <td>3.236620</td>\n      <td>3.558414</td>\n      <td>3.840373</td>\n      <td>3.815055</td>\n      <td>3.011867</td>\n      <td>3.268449</td>\n      <td>3.352835</td>\n      <td>...</td>\n      <td>3.726833</td>\n      <td>3.947744</td>\n      <td>3.806584</td>\n      <td>3.196988</td>\n      <td>3.814831</td>\n      <td>4.384732</td>\n      <td>4.247189</td>\n      <td>3.071359</td>\n      <td>3.230197</td>\n      <td>3.435795</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 1019 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {#36db65ce .cell execution_count=6}\n``` {.python .cell-code}\nMarkdown(f\"I've not checked whether all of the cells have every gene present in the dataset. Luckily, you can see that there are {rma_expr.drop(columns = 'GENE_title').isna().sum().sum()} missing values in the table.\")\n```\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=6}\nI've not checked whether all of the cells have every gene present in the dataset. Luckily, you can see that there are 0 missing values in the table.\n:::\n:::\n\n\nWhat can we tell about the shape of this data? It would be interesting to know a bit more about how the differences in expression correlate. The first thing to do will be to normalise the data. I'll mean centre the expression and scale the standard deviation to one for comparison's sake^[note: I don't do this for the models as they don't really care about scaling].\n\n::: {#77b7566e .cell execution_count=7}\n``` {.python .cell-code}\nscaler = StandardScaler()\nrma_norm_and_scale = rma_expr.drop(columns='GENE_title')\nrma_norm_and_scale = rma_norm_and_scale.apply(lambda x: (x-x.mean())/x.std(), axis = 1)\nrma_norm_and_scale.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>DATA.906826</th>\n      <th>DATA.687983</th>\n      <th>DATA.910927</th>\n      <th>DATA.1240138</th>\n      <th>DATA.1240139</th>\n      <th>DATA.906792</th>\n      <th>DATA.910688</th>\n      <th>DATA.1240135</th>\n      <th>DATA.1290812</th>\n      <th>DATA.907045</th>\n      <th>...</th>\n      <th>DATA.753584</th>\n      <th>DATA.907044</th>\n      <th>DATA.998184</th>\n      <th>DATA.908145</th>\n      <th>DATA.1659787</th>\n      <th>DATA.1298157</th>\n      <th>DATA.1480372</th>\n      <th>DATA.1298533</th>\n      <th>DATA.930299</th>\n      <th>DATA.905954.1</th>\n    </tr>\n    <tr>\n      <th>GENE_SYMBOLS</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>TSPAN6</th>\n      <td>0.496521</td>\n      <td>0.452582</td>\n      <td>1.066017</td>\n      <td>0.583565</td>\n      <td>0.547784</td>\n      <td>0.202636</td>\n      <td>-1.794941</td>\n      <td>0.143106</td>\n      <td>-0.393836</td>\n      <td>-1.704927</td>\n      <td>...</td>\n      <td>0.219033</td>\n      <td>-1.820611</td>\n      <td>-1.924783</td>\n      <td>0.887251</td>\n      <td>0.127593</td>\n      <td>0.923311</td>\n      <td>0.913450</td>\n      <td>0.737554</td>\n      <td>-1.886068</td>\n      <td>0.244068</td>\n    </tr>\n    <tr>\n      <th>TNMD</th>\n      <td>0.428850</td>\n      <td>-0.307066</td>\n      <td>-0.835597</td>\n      <td>-0.148726</td>\n      <td>0.401890</td>\n      <td>0.133851</td>\n      <td>-0.108241</td>\n      <td>0.075070</td>\n      <td>-0.664814</td>\n      <td>1.711101</td>\n      <td>...</td>\n      <td>-0.223850</td>\n      <td>-0.435368</td>\n      <td>0.475401</td>\n      <td>-0.012354</td>\n      <td>-0.917817</td>\n      <td>-0.852262</td>\n      <td>0.095308</td>\n      <td>-1.317385</td>\n      <td>0.058202</td>\n      <td>-0.084290</td>\n    </tr>\n    <tr>\n      <th>DPM1</th>\n      <td>0.636193</td>\n      <td>3.280857</td>\n      <td>-0.287761</td>\n      <td>-0.282689</td>\n      <td>0.708964</td>\n      <td>-0.485484</td>\n      <td>0.422871</td>\n      <td>0.314598</td>\n      <td>0.488389</td>\n      <td>2.841521</td>\n      <td>...</td>\n      <td>0.834263</td>\n      <td>0.753625</td>\n      <td>0.510996</td>\n      <td>0.775628</td>\n      <td>0.708289</td>\n      <td>2.644414</td>\n      <td>0.966315</td>\n      <td>1.401550</td>\n      <td>-0.300413</td>\n      <td>1.393157</td>\n    </tr>\n    <tr>\n      <th>SCYL3</th>\n      <td>-1.191180</td>\n      <td>-0.339110</td>\n      <td>-0.547668</td>\n      <td>-0.345114</td>\n      <td>0.178460</td>\n      <td>0.045403</td>\n      <td>3.244277</td>\n      <td>-1.002257</td>\n      <td>-0.751439</td>\n      <td>2.476658</td>\n      <td>...</td>\n      <td>-1.036556</td>\n      <td>0.710918</td>\n      <td>0.191697</td>\n      <td>-0.732575</td>\n      <td>-0.564007</td>\n      <td>0.337435</td>\n      <td>-1.312564</td>\n      <td>0.370393</td>\n      <td>0.037723</td>\n      <td>-0.275771</td>\n    </tr>\n    <tr>\n      <th>C1orf112</th>\n      <td>-0.731236</td>\n      <td>0.088984</td>\n      <td>-1.067110</td>\n      <td>-0.316857</td>\n      <td>0.340522</td>\n      <td>0.281495</td>\n      <td>-1.591115</td>\n      <td>-0.992903</td>\n      <td>-0.796159</td>\n      <td>-0.286982</td>\n      <td>...</td>\n      <td>0.075808</td>\n      <td>0.590856</td>\n      <td>0.261743</td>\n      <td>-1.159512</td>\n      <td>0.280971</td>\n      <td>1.609680</td>\n      <td>1.289001</td>\n      <td>-1.452412</td>\n      <td>-1.082086</td>\n      <td>-0.602740</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 1018 columns</p>\n</div>\n```\n:::\n:::\n\n\nNow we have the data standardized like this, let's see if there are any common patterns in the expression data. I'll use a neat clustering algorithm called [HDBSCAN](https://hdbscan.readthedocs.io/en/latest/how_hdbscan_works.html).\n\n::: {#2d40d23c .cell execution_count=8}\n``` {.python .cell-code}\nclusterer = hdbscan.HDBSCAN(metric = 'manhattan')\nclusterer.fit(rma_norm_and_scale)\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<style>#sk-container-id-1 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-1 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-1 pre {\n  padding: 0;\n}\n\n#sk-container-id-1 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-1 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-1 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-1 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-1 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-1 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-1 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-1 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-1 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-1 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-1 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-1 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-1 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"â–¸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-1 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"â–¾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n#sk-container-id-1 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-1 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-1 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-1 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-1 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-1 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-1 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-1 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>HDBSCAN(metric=&#x27;manhattan&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;HDBSCAN<span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>HDBSCAN(metric=&#x27;manhattan&#x27;)</pre></div> </div></div></div></div>\n```\n:::\n:::\n\n\n::: {#e1966961 .cell execution_count=9}\n``` {.python .cell-code}\nMarkdown(f\"There are {clusterer.labels_.max()+1} estimated clusters\")\n```\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=9}\nThere are 21 estimated clusters\n:::\n:::\n\n\n::: {#83018c0d .cell execution_count=10}\n``` {.python .cell-code}\ntsne = TSNE(n_components = 2)\n\ngene_embed = tsne.fit_transform(rma_norm_and_scale)\n\ndef plot_clusters(labels, projection):\n    clust_label_df = pd.DataFrame({\n                                    'label': labels,\n                                    'x': projection[:,0],\n                                    'y':projection[:,1]\n                                })\n    \n    fig, axs = plt.subplots(figsize = (12,8), ncols = 2, gridspec_kw = {'width_ratios': (4,2)}, dpi = 600)\n\n    palette = ['grey', *cm.get_cmap('viridis', labels.max()+1).colors]\n\n    for i in range(-1, labels.max()+1):\n        label_frame = clust_label_df.loc[clust_label_df['label'] == i]\n        axs[0].scatter(label_frame.x, label_frame.y, color = palette[i+1], alpha = 0.3)\n    \n    bar_y = np.arange(labels.max()+2)\n    cluster_sizes = [len([x for x in labels if x == i]) for i in range(-1, labels.max()+1)]\n    axs[1].set_xscale('log')\n    axs[1].set_xlim((1, max(cluster_sizes)))\n    axs[1].set_yticks([],[])\n    \n    for i in bar_y:\n        axs[1].text(3, bar_y[i], cluster_sizes[i], weight = 'bold')\n    \n    axs[1].barh(bar_y, cluster_sizes, color = palette)\n    axs[1].set_xlabel('Genes in cluster')\n    plt.tight_layout()\n\nplot_clusters(clusterer.labels_, gene_embed)\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_41128/4170233528.py:14: MatplotlibDeprecationWarning:\n\nThe get_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap(obj)`` instead.\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](improving_gdsc_models_files/figure-html/cell-11-output-2.png){}\n:::\n:::\n\n\n",
    "supporting": [
      "improving_gdsc_models_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}