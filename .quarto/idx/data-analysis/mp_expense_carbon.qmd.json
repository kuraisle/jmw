{"title":"MP carbon footprint on expenses","markdown":{"yaml":{"title":"MP carbon footprint on expenses","format":{"html":{"code-fold":true,"code-summary":"Show the code"}},"description":"An examination of how large the carbon footprint of UK MPs is, if you only look at the travel that they claim on their expenses.","date-format":"iso","date":"2023-11-27"},"headingText":"An example - Hey big spender!","containsRefs":false,"markdown":"\n\n*This is a work in progress. I need to finish converting trips to carbon consumption!*\n\nHere we're going to look at the carbon footprint of the travel UK Members of Parliament (MPs) have put on their expenses. First, we will get the data for MPs' expenses from [IPSA](https://www.theipsa.org.uk/). I'll be looking at the data from the year 2022-2023, as this is the last complete year of data as of 21/11/2023.\n\nHere are the top 30 spenders, by the amount paid for their travel.\n```{python}\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nmp_data: pd.DataFrame = pd.read_csv(\"data/individualBusinessCosts_22_23.csv\", low_memory=False)\ntravel_tags: list[str] = ['Dependant Travel', 'MP Travel', 'Staff Travel']\ntravel_data: pd.DataFrame = mp_data[mp_data['Category'].isin(travel_tags)][['Name', 'Category', 'Cost Type', 'Short Description', 'Details', 'Journey Type', 'From', 'To', 'Travel', 'Nights', 'Mileage', 'Amount Claimed', 'Amount Paid', 'Amount Not Paid', 'Amount Repaid']]\ntotal_paid = travel_data[['Name', 'Amount Paid']].groupby('Name').sum().sort_values(by='Amount Paid', ascending=False)\n\nfig, ax = plt.subplots(figsize = [8,8])\ntotal_paid.iloc[:30].plot(kind='bar', ax=ax)\nplt.ylabel(\"Total Travel Expenses (£)\")\nplt.xticks(rotation = 60, ha = \"right\")\nplt.legend([],[])\nplt.show()\n```\n\nPhew, Steven Bonnar spent nearly £60,000 on travel.\n\n```{python}\nbonnar_cost_split = travel_data.loc[travel_data['Name'] == 'Steven Bonnar'][['Cost Type', 'Amount Paid']].groupby('Cost Type').sum()\nfig, ax = plt.subplots()\n\nax.pie(x = bonnar_cost_split['Amount Paid'],\n       labels = bonnar_cost_split.index,\n       labeldistance=None\n    )\nax.legend(bbox_to_anchor = (1.1, 0.8))\n\nplt.show()\n```\n\nA lot of this was spent on air travel. Steven Bonnar is the Scottish National Party (SNP) MP for Coatbridge, Chryston and Bellshill.\n\n```{python}\nbonnar_flights = (travel_data\n    .loc[(travel_data['Name'] == 'Steven Bonnar') & (travel_data['Cost Type'] == 'Air travel')][['From', 'To']]\n    .groupby(by=['From', 'To'], group_keys='Total Flights')\n    .size()\n    .reset_index(name = 'Number of Trips')\n    )\nbonnar_flights.set_index(['From', 'To'], inplace=True)\nbonnar_flights\n```\n\nYou can see that all of this is him flying from Glasgow, where his constituency is, to London, for Parliament.\nA Glasgow to London flight takes about an hour and a half. The train takes four and a half hours.\n\n```{python}\npd.DataFrame({\n    'Journey': ['GLA-LCY', 'GLA-LHR', 'GLA-LGW', 'GLA-STN','Glasgow-Euston'],\n    'Vehicle': [*['Aeroplane']*4, 'Train'],\n    'Time (hours)': [1.5, 1.4, 1.6, 1.3, 4.5],\n    'Estimated CO2 (kg)': [101.2, 68.5, 81.4, 75.6, 24.57],\n    'Distance to parliament (km)': [9.5 , 16.7, 27.1, 41.2, 2.4]\n}).set_index('Journey')\n```\n\nIs this all fair enough then? The honourable member would save up to three hours and ten minutes per trip going by air, right? Getting through the airport takes at least an hour, though, and London Euston is a lot closer to Parliament than, for example, Stansted, shrinking the time advantage.\n\nLet's have an estimate of the carbon emissions of these trips then.\n```{python}\nbonnar_flights['Emissions per flight (kg CO2)'] = [101.2, 68.5, 75.6, 101.2, 81.4, 68.5]\nbonnar_flights['Total emissions (kg CO2)'] = bonnar_flights['Number of Trips'] * bonnar_flights['Emissions per flight (kg CO2)']\nbonnar_flights\n```\n```{python}\n#| echo: false\nfrom IPython.display import Markdown\nbonnar_tons = bonnar_flights['Total emissions (kg CO2)'].sum()/1000\nMarkdown(\n        f\"From this we can see that the total emissions from Steven Bonnar's flights is 10.3275 tons of CO<sub>2</sub>. Given an estimate of the average total emissions of a UK resident is [11.7 tons](https://www.openaccessgovernment.org/the-average-british-carbon-footprint-is-five-times-over-paris-agreement-recommendations/152669/#:~:text=Recent%20research%20finds%20that%20an,equivalent%20(tCO2e)%20per%20year.), you might wonder if it might be better to take the train.\"\n)\n```\n\n## The point of the exercise\nAll this isn't just to bash poor Steven Bonnar, against whom I have no particular grudge. It's always going to be tricky commuting from Glasgow to London. I do think, however, we should look at how much damage to the environment the UK taxpayer is paying for. Here, I'll be estimating the emissions for each taxpayer-funded trip, then breaking down the dataset to see if anyone could be doing better.\n\n### Estimating emissions\nHow do you estimate emissions from travel then? For some modes of transport, it's fairly straightforward - there's a particular value per kilometre, and we assume everything else evens out.\n\nWhat kinds of expenses are people claiming then?\n```{python}\npd.DataFrame(travel_data['Cost Type'].unique())\n```\n\nSome of these we will discard. We aren't looking at the emissions of staying in a hotel, because it would be too hard to estimate, and not meaningful to look at here. Other things like railcards and congestion charges don't have a meaningful emissions figure.\n\nI am curious as to what someone is claiming as the mileage on their bicycle, though. New tyres? Protein bars?\n<!---\n#### Road emissions\n\n#### Train emissions\n\n#### Air Travel emissions\n--->","srcMarkdownNoYaml":"\n\n*This is a work in progress. I need to finish converting trips to carbon consumption!*\n\n## An example - Hey big spender!\nHere we're going to look at the carbon footprint of the travel UK Members of Parliament (MPs) have put on their expenses. First, we will get the data for MPs' expenses from [IPSA](https://www.theipsa.org.uk/). I'll be looking at the data from the year 2022-2023, as this is the last complete year of data as of 21/11/2023.\n\nHere are the top 30 spenders, by the amount paid for their travel.\n```{python}\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nmp_data: pd.DataFrame = pd.read_csv(\"data/individualBusinessCosts_22_23.csv\", low_memory=False)\ntravel_tags: list[str] = ['Dependant Travel', 'MP Travel', 'Staff Travel']\ntravel_data: pd.DataFrame = mp_data[mp_data['Category'].isin(travel_tags)][['Name', 'Category', 'Cost Type', 'Short Description', 'Details', 'Journey Type', 'From', 'To', 'Travel', 'Nights', 'Mileage', 'Amount Claimed', 'Amount Paid', 'Amount Not Paid', 'Amount Repaid']]\ntotal_paid = travel_data[['Name', 'Amount Paid']].groupby('Name').sum().sort_values(by='Amount Paid', ascending=False)\n\nfig, ax = plt.subplots(figsize = [8,8])\ntotal_paid.iloc[:30].plot(kind='bar', ax=ax)\nplt.ylabel(\"Total Travel Expenses (£)\")\nplt.xticks(rotation = 60, ha = \"right\")\nplt.legend([],[])\nplt.show()\n```\n\nPhew, Steven Bonnar spent nearly £60,000 on travel.\n\n```{python}\nbonnar_cost_split = travel_data.loc[travel_data['Name'] == 'Steven Bonnar'][['Cost Type', 'Amount Paid']].groupby('Cost Type').sum()\nfig, ax = plt.subplots()\n\nax.pie(x = bonnar_cost_split['Amount Paid'],\n       labels = bonnar_cost_split.index,\n       labeldistance=None\n    )\nax.legend(bbox_to_anchor = (1.1, 0.8))\n\nplt.show()\n```\n\nA lot of this was spent on air travel. Steven Bonnar is the Scottish National Party (SNP) MP for Coatbridge, Chryston and Bellshill.\n\n```{python}\nbonnar_flights = (travel_data\n    .loc[(travel_data['Name'] == 'Steven Bonnar') & (travel_data['Cost Type'] == 'Air travel')][['From', 'To']]\n    .groupby(by=['From', 'To'], group_keys='Total Flights')\n    .size()\n    .reset_index(name = 'Number of Trips')\n    )\nbonnar_flights.set_index(['From', 'To'], inplace=True)\nbonnar_flights\n```\n\nYou can see that all of this is him flying from Glasgow, where his constituency is, to London, for Parliament.\nA Glasgow to London flight takes about an hour and a half. The train takes four and a half hours.\n\n```{python}\npd.DataFrame({\n    'Journey': ['GLA-LCY', 'GLA-LHR', 'GLA-LGW', 'GLA-STN','Glasgow-Euston'],\n    'Vehicle': [*['Aeroplane']*4, 'Train'],\n    'Time (hours)': [1.5, 1.4, 1.6, 1.3, 4.5],\n    'Estimated CO2 (kg)': [101.2, 68.5, 81.4, 75.6, 24.57],\n    'Distance to parliament (km)': [9.5 , 16.7, 27.1, 41.2, 2.4]\n}).set_index('Journey')\n```\n\nIs this all fair enough then? The honourable member would save up to three hours and ten minutes per trip going by air, right? Getting through the airport takes at least an hour, though, and London Euston is a lot closer to Parliament than, for example, Stansted, shrinking the time advantage.\n\nLet's have an estimate of the carbon emissions of these trips then.\n```{python}\nbonnar_flights['Emissions per flight (kg CO2)'] = [101.2, 68.5, 75.6, 101.2, 81.4, 68.5]\nbonnar_flights['Total emissions (kg CO2)'] = bonnar_flights['Number of Trips'] * bonnar_flights['Emissions per flight (kg CO2)']\nbonnar_flights\n```\n```{python}\n#| echo: false\nfrom IPython.display import Markdown\nbonnar_tons = bonnar_flights['Total emissions (kg CO2)'].sum()/1000\nMarkdown(\n        f\"From this we can see that the total emissions from Steven Bonnar's flights is 10.3275 tons of CO<sub>2</sub>. Given an estimate of the average total emissions of a UK resident is [11.7 tons](https://www.openaccessgovernment.org/the-average-british-carbon-footprint-is-five-times-over-paris-agreement-recommendations/152669/#:~:text=Recent%20research%20finds%20that%20an,equivalent%20(tCO2e)%20per%20year.), you might wonder if it might be better to take the train.\"\n)\n```\n\n## The point of the exercise\nAll this isn't just to bash poor Steven Bonnar, against whom I have no particular grudge. It's always going to be tricky commuting from Glasgow to London. I do think, however, we should look at how much damage to the environment the UK taxpayer is paying for. Here, I'll be estimating the emissions for each taxpayer-funded trip, then breaking down the dataset to see if anyone could be doing better.\n\n### Estimating emissions\nHow do you estimate emissions from travel then? For some modes of transport, it's fairly straightforward - there's a particular value per kilometre, and we assume everything else evens out.\n\nWhat kinds of expenses are people claiming then?\n```{python}\npd.DataFrame(travel_data['Cost Type'].unique())\n```\n\nSome of these we will discard. We aren't looking at the emissions of staying in a hotel, because it would be too hard to estimate, and not meaningful to look at here. Other things like railcards and congestion charges don't have a meaningful emissions figure.\n\nI am curious as to what someone is claiming as the mileage on their bicycle, though. New tyres? Protein bars?\n<!---\n#### Road emissions\n\n#### Train emissions\n\n#### Air Travel emissions\n--->"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"mp_expense_carbon.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.361","theme":"flatly","title":"MP carbon footprint on expenses","description":"An examination of how large the carbon footprint of UK MPs is, if you only look at the travel that they claim on their expenses.","date-format":"iso","date":"2023-11-27","code-summary":"Show the code"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}